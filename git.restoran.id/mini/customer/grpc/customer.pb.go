// Code generated by protoc-gen-go. DO NOT EDIT.
// source: customer.proto

/*
Package grpc is a generated protocol buffer package.

It is generated from these files:
	customer.proto

It has these top-level messages:
	AddCustomerReq
	ReadCustomerByMobileReq
	ReadCustomerByMobileResp
	ReadCustomerResp
	UpdateCustomerReq
	ReadCustomerByEmailReq
	ReadCustomerByEmailResp
*/
package grpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc1 "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AddCustomerReq struct {
	Name          string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	CustomerType  int32  `protobuf:"varint,2,opt,name=customerType" json:"customerType,omitempty"`
	Mobile        string `protobuf:"bytes,3,opt,name=mobile" json:"mobile,omitempty"`
	Email         string `protobuf:"bytes,4,opt,name=email" json:"email,omitempty"`
	Gender        string `protobuf:"bytes,5,opt,name=gender" json:"gender,omitempty"`
	CallbackPhone string `protobuf:"bytes,6,opt,name=callbackPhone" json:"callbackPhone,omitempty"`
	Status        int32  `protobuf:"varint,7,opt,name=status" json:"status,omitempty"`
}

func (m *AddCustomerReq) Reset()                    { *m = AddCustomerReq{} }
func (m *AddCustomerReq) String() string            { return proto.CompactTextString(m) }
func (*AddCustomerReq) ProtoMessage()               {}
func (*AddCustomerReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AddCustomerReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AddCustomerReq) GetCustomerType() int32 {
	if m != nil {
		return m.CustomerType
	}
	return 0
}

func (m *AddCustomerReq) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *AddCustomerReq) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *AddCustomerReq) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

func (m *AddCustomerReq) GetCallbackPhone() string {
	if m != nil {
		return m.CallbackPhone
	}
	return ""
}

func (m *AddCustomerReq) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type ReadCustomerByMobileReq struct {
	Mobile string `protobuf:"bytes,1,opt,name=mobile" json:"mobile,omitempty"`
}

func (m *ReadCustomerByMobileReq) Reset()                    { *m = ReadCustomerByMobileReq{} }
func (m *ReadCustomerByMobileReq) String() string            { return proto.CompactTextString(m) }
func (*ReadCustomerByMobileReq) ProtoMessage()               {}
func (*ReadCustomerByMobileReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ReadCustomerByMobileReq) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

type ReadCustomerByMobileResp struct {
	CustomerId    int64  `protobuf:"varint,1,opt,name=customerId" json:"customerId,omitempty"`
	Name          string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	CustomerType  int32  `protobuf:"varint,3,opt,name=customerType" json:"customerType,omitempty"`
	Mobile        string `protobuf:"bytes,4,opt,name=mobile" json:"mobile,omitempty"`
	Email         string `protobuf:"bytes,5,opt,name=email" json:"email,omitempty"`
	Gender        string `protobuf:"bytes,6,opt,name=gender" json:"gender,omitempty"`
	CallbackPhone string `protobuf:"bytes,7,opt,name=callbackPhone" json:"callbackPhone,omitempty"`
	Status        int32  `protobuf:"varint,8,opt,name=status" json:"status,omitempty"`
}

func (m *ReadCustomerByMobileResp) Reset()                    { *m = ReadCustomerByMobileResp{} }
func (m *ReadCustomerByMobileResp) String() string            { return proto.CompactTextString(m) }
func (*ReadCustomerByMobileResp) ProtoMessage()               {}
func (*ReadCustomerByMobileResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ReadCustomerByMobileResp) GetCustomerId() int64 {
	if m != nil {
		return m.CustomerId
	}
	return 0
}

func (m *ReadCustomerByMobileResp) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReadCustomerByMobileResp) GetCustomerType() int32 {
	if m != nil {
		return m.CustomerType
	}
	return 0
}

func (m *ReadCustomerByMobileResp) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *ReadCustomerByMobileResp) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *ReadCustomerByMobileResp) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

func (m *ReadCustomerByMobileResp) GetCallbackPhone() string {
	if m != nil {
		return m.CallbackPhone
	}
	return ""
}

func (m *ReadCustomerByMobileResp) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type ReadCustomerResp struct {
	AllCustomer []*ReadCustomerByMobileResp `protobuf:"bytes,1,rep,name=allCustomer" json:"allCustomer,omitempty"`
}

func (m *ReadCustomerResp) Reset()                    { *m = ReadCustomerResp{} }
func (m *ReadCustomerResp) String() string            { return proto.CompactTextString(m) }
func (*ReadCustomerResp) ProtoMessage()               {}
func (*ReadCustomerResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ReadCustomerResp) GetAllCustomer() []*ReadCustomerByMobileResp {
	if m != nil {
		return m.AllCustomer
	}
	return nil
}

type UpdateCustomerReq struct {
	CustomerId    int64  `protobuf:"varint,1,opt,name=customerId" json:"customerId,omitempty"`
	Name          string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	CustomerType  int32  `protobuf:"varint,3,opt,name=customerType" json:"customerType,omitempty"`
	Mobile        string `protobuf:"bytes,4,opt,name=mobile" json:"mobile,omitempty"`
	Email         string `protobuf:"bytes,5,opt,name=email" json:"email,omitempty"`
	Gender        string `protobuf:"bytes,6,opt,name=gender" json:"gender,omitempty"`
	CallbackPhone string `protobuf:"bytes,7,opt,name=callbackPhone" json:"callbackPhone,omitempty"`
	Status        int32  `protobuf:"varint,8,opt,name=status" json:"status,omitempty"`
}

func (m *UpdateCustomerReq) Reset()                    { *m = UpdateCustomerReq{} }
func (m *UpdateCustomerReq) String() string            { return proto.CompactTextString(m) }
func (*UpdateCustomerReq) ProtoMessage()               {}
func (*UpdateCustomerReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *UpdateCustomerReq) GetCustomerId() int64 {
	if m != nil {
		return m.CustomerId
	}
	return 0
}

func (m *UpdateCustomerReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateCustomerReq) GetCustomerType() int32 {
	if m != nil {
		return m.CustomerType
	}
	return 0
}

func (m *UpdateCustomerReq) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *UpdateCustomerReq) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UpdateCustomerReq) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

func (m *UpdateCustomerReq) GetCallbackPhone() string {
	if m != nil {
		return m.CallbackPhone
	}
	return ""
}

func (m *UpdateCustomerReq) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type ReadCustomerByEmailReq struct {
	Email string `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
}

func (m *ReadCustomerByEmailReq) Reset()                    { *m = ReadCustomerByEmailReq{} }
func (m *ReadCustomerByEmailReq) String() string            { return proto.CompactTextString(m) }
func (*ReadCustomerByEmailReq) ProtoMessage()               {}
func (*ReadCustomerByEmailReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ReadCustomerByEmailReq) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type ReadCustomerByEmailResp struct {
	CustomerId    int64  `protobuf:"varint,1,opt,name=customerId" json:"customerId,omitempty"`
	Name          string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	CustomerType  int32  `protobuf:"varint,3,opt,name=customerType" json:"customerType,omitempty"`
	Mobile        string `protobuf:"bytes,4,opt,name=mobile" json:"mobile,omitempty"`
	Email         string `protobuf:"bytes,5,opt,name=email" json:"email,omitempty"`
	Gender        string `protobuf:"bytes,6,opt,name=gender" json:"gender,omitempty"`
	CallbackPhone string `protobuf:"bytes,7,opt,name=callbackPhone" json:"callbackPhone,omitempty"`
	Status        int32  `protobuf:"varint,8,opt,name=status" json:"status,omitempty"`
}

func (m *ReadCustomerByEmailResp) Reset()                    { *m = ReadCustomerByEmailResp{} }
func (m *ReadCustomerByEmailResp) String() string            { return proto.CompactTextString(m) }
func (*ReadCustomerByEmailResp) ProtoMessage()               {}
func (*ReadCustomerByEmailResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ReadCustomerByEmailResp) GetCustomerId() int64 {
	if m != nil {
		return m.CustomerId
	}
	return 0
}

func (m *ReadCustomerByEmailResp) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReadCustomerByEmailResp) GetCustomerType() int32 {
	if m != nil {
		return m.CustomerType
	}
	return 0
}

func (m *ReadCustomerByEmailResp) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *ReadCustomerByEmailResp) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *ReadCustomerByEmailResp) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

func (m *ReadCustomerByEmailResp) GetCallbackPhone() string {
	if m != nil {
		return m.CallbackPhone
	}
	return ""
}

func (m *ReadCustomerByEmailResp) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func init() {
	proto.RegisterType((*AddCustomerReq)(nil), "grpc.AddCustomerReq")
	proto.RegisterType((*ReadCustomerByMobileReq)(nil), "grpc.ReadCustomerByMobileReq")
	proto.RegisterType((*ReadCustomerByMobileResp)(nil), "grpc.ReadCustomerByMobileResp")
	proto.RegisterType((*ReadCustomerResp)(nil), "grpc.ReadCustomerResp")
	proto.RegisterType((*UpdateCustomerReq)(nil), "grpc.UpdateCustomerReq")
	proto.RegisterType((*ReadCustomerByEmailReq)(nil), "grpc.ReadCustomerByEmailReq")
	proto.RegisterType((*ReadCustomerByEmailResp)(nil), "grpc.ReadCustomerByEmailResp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc1.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc1.SupportPackageIsVersion4

// Client API for CustomerService service

type CustomerServiceClient interface {
	AddCustomer(ctx context.Context, in *AddCustomerReq, opts ...grpc1.CallOption) (*google_protobuf.Empty, error)
	ReadCustomerByMobile(ctx context.Context, in *ReadCustomerByMobileReq, opts ...grpc1.CallOption) (*ReadCustomerByMobileResp, error)
	ReadCustomer(ctx context.Context, in *google_protobuf.Empty, opts ...grpc1.CallOption) (*ReadCustomerResp, error)
	UpdateCustomer(ctx context.Context, in *UpdateCustomerReq, opts ...grpc1.CallOption) (*google_protobuf.Empty, error)
	ReadCustomerByEmail(ctx context.Context, in *ReadCustomerByEmailReq, opts ...grpc1.CallOption) (*ReadCustomerByEmailResp, error)
}

type customerServiceClient struct {
	cc *grpc1.ClientConn
}

func NewCustomerServiceClient(cc *grpc1.ClientConn) CustomerServiceClient {
	return &customerServiceClient{cc}
}

func (c *customerServiceClient) AddCustomer(ctx context.Context, in *AddCustomerReq, opts ...grpc1.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc1.Invoke(ctx, "/grpc.CustomerService/AddCustomer", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerServiceClient) ReadCustomerByMobile(ctx context.Context, in *ReadCustomerByMobileReq, opts ...grpc1.CallOption) (*ReadCustomerByMobileResp, error) {
	out := new(ReadCustomerByMobileResp)
	err := grpc1.Invoke(ctx, "/grpc.CustomerService/ReadCustomerByMobile", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerServiceClient) ReadCustomer(ctx context.Context, in *google_protobuf.Empty, opts ...grpc1.CallOption) (*ReadCustomerResp, error) {
	out := new(ReadCustomerResp)
	err := grpc1.Invoke(ctx, "/grpc.CustomerService/ReadCustomer", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerServiceClient) UpdateCustomer(ctx context.Context, in *UpdateCustomerReq, opts ...grpc1.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc1.Invoke(ctx, "/grpc.CustomerService/UpdateCustomer", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerServiceClient) ReadCustomerByEmail(ctx context.Context, in *ReadCustomerByEmailReq, opts ...grpc1.CallOption) (*ReadCustomerByEmailResp, error) {
	out := new(ReadCustomerByEmailResp)
	err := grpc1.Invoke(ctx, "/grpc.CustomerService/ReadCustomerByEmail", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for CustomerService service

type CustomerServiceServer interface {
	AddCustomer(context.Context, *AddCustomerReq) (*google_protobuf.Empty, error)
	ReadCustomerByMobile(context.Context, *ReadCustomerByMobileReq) (*ReadCustomerByMobileResp, error)
	ReadCustomer(context.Context, *google_protobuf.Empty) (*ReadCustomerResp, error)
	UpdateCustomer(context.Context, *UpdateCustomerReq) (*google_protobuf.Empty, error)
	ReadCustomerByEmail(context.Context, *ReadCustomerByEmailReq) (*ReadCustomerByEmailResp, error)
}

func RegisterCustomerServiceServer(s *grpc1.Server, srv CustomerServiceServer) {
	s.RegisterService(&_CustomerService_serviceDesc, srv)
}

func _CustomerService_AddCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddCustomerReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).AddCustomer(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.CustomerService/AddCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).AddCustomer(ctx, req.(*AddCustomerReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomerService_ReadCustomerByMobile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadCustomerByMobileReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).ReadCustomerByMobile(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.CustomerService/ReadCustomerByMobile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).ReadCustomerByMobile(ctx, req.(*ReadCustomerByMobileReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomerService_ReadCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).ReadCustomer(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.CustomerService/ReadCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).ReadCustomer(ctx, req.(*google_protobuf.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomerService_UpdateCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCustomerReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).UpdateCustomer(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.CustomerService/UpdateCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).UpdateCustomer(ctx, req.(*UpdateCustomerReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomerService_ReadCustomerByEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadCustomerByEmailReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).ReadCustomerByEmail(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.CustomerService/ReadCustomerByEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).ReadCustomerByEmail(ctx, req.(*ReadCustomerByEmailReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _CustomerService_serviceDesc = grpc1.ServiceDesc{
	ServiceName: "grpc.CustomerService",
	HandlerType: (*CustomerServiceServer)(nil),
	Methods: []grpc1.MethodDesc{
		{
			MethodName: "AddCustomer",
			Handler:    _CustomerService_AddCustomer_Handler,
		},
		{
			MethodName: "ReadCustomerByMobile",
			Handler:    _CustomerService_ReadCustomerByMobile_Handler,
		},
		{
			MethodName: "ReadCustomer",
			Handler:    _CustomerService_ReadCustomer_Handler,
		},
		{
			MethodName: "UpdateCustomer",
			Handler:    _CustomerService_UpdateCustomer_Handler,
		},
		{
			MethodName: "ReadCustomerByEmail",
			Handler:    _CustomerService_ReadCustomerByEmail_Handler,
		},
	},
	Streams:  []grpc1.StreamDesc{},
	Metadata: "customer.proto",
}

func init() { proto.RegisterFile("customer.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 449 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x54, 0x4d, 0x8f, 0xd3, 0x30,
	0x10, 0x5d, 0x6f, 0x3e, 0x16, 0xa6, 0x4b, 0x81, 0xa1, 0xea, 0x5a, 0x81, 0x5d, 0x55, 0x16, 0x87,
	0x9e, 0xb2, 0x62, 0x39, 0x23, 0x15, 0xaa, 0x1e, 0x38, 0x20, 0xa1, 0x50, 0xc4, 0xd9, 0x49, 0x4c,
	0xa8, 0x48, 0x9a, 0x34, 0x49, 0x91, 0xfa, 0x07, 0xf8, 0x75, 0xfc, 0x17, 0x4e, 0x70, 0x46, 0x76,
	0x92, 0xe2, 0x94, 0x34, 0xdc, 0x7b, 0xcb, 0x8c, 0xe7, 0x39, 0xef, 0x3d, 0x3d, 0x0f, 0x0c, 0x83,
	0x6d, 0x51, 0xa6, 0x89, 0xc8, 0xdd, 0x2c, 0x4f, 0xcb, 0x14, 0xcd, 0x28, 0xcf, 0x02, 0xe7, 0x69,
	0x94, 0xa6, 0x51, 0x2c, 0x6e, 0x55, 0xcf, 0xdf, 0x7e, 0xbe, 0x15, 0x49, 0x56, 0xee, 0xaa, 0x11,
	0xf6, 0x83, 0xc0, 0xf0, 0x75, 0x18, 0xce, 0x6b, 0xa0, 0x27, 0x36, 0x88, 0x60, 0xae, 0x79, 0x22,
	0x28, 0x99, 0x90, 0xe9, 0x7d, 0x4f, 0x7d, 0x23, 0x83, 0xcb, 0xe6, 0xee, 0xe5, 0x2e, 0x13, 0xf4,
	0x7c, 0x42, 0xa6, 0x96, 0xd7, 0xea, 0xe1, 0x18, 0xec, 0x24, 0xf5, 0x57, 0xb1, 0xa0, 0x86, 0x42,
	0xd6, 0x15, 0x8e, 0xc0, 0x12, 0x09, 0x5f, 0xc5, 0xd4, 0x54, 0xed, 0xaa, 0x90, 0xd3, 0x91, 0x58,
	0x87, 0x22, 0xa7, 0x56, 0x35, 0x5d, 0x55, 0xf8, 0x1c, 0x1e, 0x04, 0x3c, 0x8e, 0x7d, 0x1e, 0x7c,
	0x7d, 0xff, 0x25, 0x5d, 0x0b, 0x6a, 0xab, 0xe3, 0x76, 0x53, 0xa2, 0x8b, 0x92, 0x97, 0xdb, 0x82,
	0x5e, 0x28, 0x26, 0x75, 0xc5, 0x5e, 0xc0, 0x95, 0x27, 0xf8, 0x5e, 0xce, 0x9b, 0xdd, 0x3b, 0xc5,
	0x41, 0xca, 0xfa, 0x4b, 0x8f, 0xe8, 0xf4, 0xd8, 0x6f, 0x02, 0xb4, 0x1b, 0x53, 0x64, 0x78, 0x03,
	0xd0, 0x68, 0x7c, 0x1b, 0x2a, 0xa0, 0xe1, 0x69, 0x9d, 0xbd, 0x57, 0xe7, 0x3d, 0x5e, 0x19, 0xbd,
	0x5e, 0x99, 0xdd, 0x5e, 0x59, 0xdd, 0x5e, 0xd9, 0xfd, 0x5e, 0x5d, 0xf4, 0x7b, 0x75, 0xaf, 0xe5,
	0xd5, 0x12, 0x1e, 0xe9, 0xba, 0x95, 0xde, 0x19, 0x0c, 0x78, 0x1c, 0x37, 0x2d, 0x4a, 0x26, 0xc6,
	0x74, 0x70, 0x77, 0xe3, 0xca, 0x1c, 0xb9, 0xc7, 0x4c, 0xf2, 0x74, 0x08, 0xfb, 0x49, 0xe0, 0xf1,
	0xc7, 0x2c, 0xe4, 0xa5, 0xd0, 0x33, 0x75, 0xca, 0x3e, 0xba, 0x30, 0x6e, 0x5b, 0xb3, 0x90, 0x3f,
	0x93, 0xaa, 0xf7, 0x2c, 0x88, 0xc6, 0x82, 0xfd, 0x22, 0x87, 0x21, 0xad, 0x01, 0xa7, 0x9d, 0xb7,
	0xbb, 0xef, 0x06, 0x3c, 0x6c, 0x34, 0x7f, 0x10, 0xf9, 0xb7, 0x55, 0x20, 0xf0, 0x15, 0x0c, 0xb4,
	0xed, 0x83, 0xa3, 0x2a, 0x69, 0xed, 0x85, 0xe4, 0x8c, 0xdd, 0x6a, 0x83, 0xb9, 0xcd, 0x06, 0x73,
	0x17, 0x72, 0x83, 0xb1, 0x33, 0xfc, 0x04, 0xa3, 0xae, 0x54, 0xe2, 0x75, 0x5f, 0x62, 0x37, 0xce,
	0x7f, 0x02, 0xcd, 0xce, 0x70, 0x06, 0x97, 0xfa, 0x29, 0x1e, 0xa1, 0x20, 0xa9, 0x1d, 0xde, 0x54,
	0xdf, 0x30, 0x87, 0x61, 0xfb, 0x19, 0xe0, 0x55, 0x35, 0xfb, 0xcf, 0xe3, 0xe8, 0xd1, 0xb7, 0x84,
	0x27, 0x1d, 0x49, 0xc1, 0x67, 0x5d, 0xfc, 0x9b, 0xd4, 0x39, 0xd7, 0x3d, 0xa7, 0x92, 0x9a, 0x6f,
	0xab, 0xff, 0xbc, 0xfc, 0x13, 0x00, 0x00, 0xff, 0xff, 0x6d, 0x84, 0x21, 0x6f, 0x2f, 0x06, 0x00,
	0x00,
}
