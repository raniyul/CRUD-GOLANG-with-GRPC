// Code generated by protoc-gen-go. DO NOT EDIT.
// source: item.proto

/*
Package grpc is a generated protocol buffer package.

It is generated from these files:
	item.proto

It has these top-level messages:
	AddItemReq
	ReadItemByIDSupplierReq
	ReadItemByIDSupplierResp
	ReadByKeteranganReq
	ReadByKeteranganResp
	ReadItemResp
	UpdateItemReq
	ReadItemBystatusReq
	ReadItemBystatusResp
*/
package grpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc1 "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AddItemReq struct {
	NamaItem   string `protobuf:"bytes,1,opt,name=namaItem" json:"namaItem,omitempty"`
	Merk       string `protobuf:"bytes,2,opt,name=merk" json:"merk,omitempty"`
	IDSupplier int32  `protobuf:"varint,3,opt,name=IDSupplier" json:"IDSupplier,omitempty"`
	Status     int32  `protobuf:"varint,4,opt,name=status" json:"status,omitempty"`
	CreatedBy  string `protobuf:"bytes,5,opt,name=createdBy" json:"createdBy,omitempty"`
	CreatedOn  string `protobuf:"bytes,6,opt,name=createdOn" json:"createdOn,omitempty"`
	Keterangan string `protobuf:"bytes,7,opt,name=keterangan" json:"keterangan,omitempty"`
}

func (m *AddItemReq) Reset()                    { *m = AddItemReq{} }
func (m *AddItemReq) String() string            { return proto.CompactTextString(m) }
func (*AddItemReq) ProtoMessage()               {}
func (*AddItemReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AddItemReq) GetNamaItem() string {
	if m != nil {
		return m.NamaItem
	}
	return ""
}

func (m *AddItemReq) GetMerk() string {
	if m != nil {
		return m.Merk
	}
	return ""
}

func (m *AddItemReq) GetIDSupplier() int32 {
	if m != nil {
		return m.IDSupplier
	}
	return 0
}

func (m *AddItemReq) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *AddItemReq) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *AddItemReq) GetCreatedOn() string {
	if m != nil {
		return m.CreatedOn
	}
	return ""
}

func (m *AddItemReq) GetKeterangan() string {
	if m != nil {
		return m.Keterangan
	}
	return ""
}

type ReadItemByIDSupplierReq struct {
	IDSupplier int32 `protobuf:"varint,1,opt,name=IDSupplier" json:"IDSupplier,omitempty"`
}

func (m *ReadItemByIDSupplierReq) Reset()                    { *m = ReadItemByIDSupplierReq{} }
func (m *ReadItemByIDSupplierReq) String() string            { return proto.CompactTextString(m) }
func (*ReadItemByIDSupplierReq) ProtoMessage()               {}
func (*ReadItemByIDSupplierReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ReadItemByIDSupplierReq) GetIDSupplier() int32 {
	if m != nil {
		return m.IDSupplier
	}
	return 0
}

type ReadItemByIDSupplierResp struct {
	IDItem     int32  `protobuf:"varint,1,opt,name=IDItem" json:"IDItem,omitempty"`
	NamaItem   string `protobuf:"bytes,2,opt,name=namaItem" json:"namaItem,omitempty"`
	Merk       string `protobuf:"bytes,3,opt,name=merk" json:"merk,omitempty"`
	IDSupplier int32  `protobuf:"varint,4,opt,name=IDSupplier" json:"IDSupplier,omitempty"`
	Status     int32  `protobuf:"varint,5,opt,name=status" json:"status,omitempty"`
	CreatedBy  string `protobuf:"bytes,6,opt,name=createdBy" json:"createdBy,omitempty"`
	CreatedOn  string `protobuf:"bytes,7,opt,name=createdOn" json:"createdOn,omitempty"`
	UpdateBy   string `protobuf:"bytes,8,opt,name=updateBy" json:"updateBy,omitempty"`
	UpdateOn   string `protobuf:"bytes,9,opt,name=updateOn" json:"updateOn,omitempty"`
	Keterangan string `protobuf:"bytes,10,opt,name=keterangan" json:"keterangan,omitempty"`
}

func (m *ReadItemByIDSupplierResp) Reset()                    { *m = ReadItemByIDSupplierResp{} }
func (m *ReadItemByIDSupplierResp) String() string            { return proto.CompactTextString(m) }
func (*ReadItemByIDSupplierResp) ProtoMessage()               {}
func (*ReadItemByIDSupplierResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ReadItemByIDSupplierResp) GetIDItem() int32 {
	if m != nil {
		return m.IDItem
	}
	return 0
}

func (m *ReadItemByIDSupplierResp) GetNamaItem() string {
	if m != nil {
		return m.NamaItem
	}
	return ""
}

func (m *ReadItemByIDSupplierResp) GetMerk() string {
	if m != nil {
		return m.Merk
	}
	return ""
}

func (m *ReadItemByIDSupplierResp) GetIDSupplier() int32 {
	if m != nil {
		return m.IDSupplier
	}
	return 0
}

func (m *ReadItemByIDSupplierResp) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ReadItemByIDSupplierResp) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *ReadItemByIDSupplierResp) GetCreatedOn() string {
	if m != nil {
		return m.CreatedOn
	}
	return ""
}

func (m *ReadItemByIDSupplierResp) GetUpdateBy() string {
	if m != nil {
		return m.UpdateBy
	}
	return ""
}

func (m *ReadItemByIDSupplierResp) GetUpdateOn() string {
	if m != nil {
		return m.UpdateOn
	}
	return ""
}

func (m *ReadItemByIDSupplierResp) GetKeterangan() string {
	if m != nil {
		return m.Keterangan
	}
	return ""
}

type ReadByKeteranganReq struct {
	IDItem     int32  `protobuf:"varint,1,opt,name=IDItem" json:"IDItem,omitempty"`
	NamaItem   string `protobuf:"bytes,2,opt,name=namaItem" json:"namaItem,omitempty"`
	Merk       string `protobuf:"bytes,3,opt,name=merk" json:"merk,omitempty"`
	IDSupplier string `protobuf:"bytes,4,opt,name=IDSupplier" json:"IDSupplier,omitempty"`
	Status     int32  `protobuf:"varint,5,opt,name=status" json:"status,omitempty"`
	CreatedBy  string `protobuf:"bytes,6,opt,name=createdBy" json:"createdBy,omitempty"`
	CreatedOn  string `protobuf:"bytes,7,opt,name=createdOn" json:"createdOn,omitempty"`
	UpdateBy   string `protobuf:"bytes,8,opt,name=updateBy" json:"updateBy,omitempty"`
	UpdateOn   string `protobuf:"bytes,9,opt,name=updateOn" json:"updateOn,omitempty"`
	Keterangan string `protobuf:"bytes,10,opt,name=keterangan" json:"keterangan,omitempty"`
}

func (m *ReadByKeteranganReq) Reset()                    { *m = ReadByKeteranganReq{} }
func (m *ReadByKeteranganReq) String() string            { return proto.CompactTextString(m) }
func (*ReadByKeteranganReq) ProtoMessage()               {}
func (*ReadByKeteranganReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ReadByKeteranganReq) GetIDItem() int32 {
	if m != nil {
		return m.IDItem
	}
	return 0
}

func (m *ReadByKeteranganReq) GetNamaItem() string {
	if m != nil {
		return m.NamaItem
	}
	return ""
}

func (m *ReadByKeteranganReq) GetMerk() string {
	if m != nil {
		return m.Merk
	}
	return ""
}

func (m *ReadByKeteranganReq) GetIDSupplier() string {
	if m != nil {
		return m.IDSupplier
	}
	return ""
}

func (m *ReadByKeteranganReq) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ReadByKeteranganReq) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *ReadByKeteranganReq) GetCreatedOn() string {
	if m != nil {
		return m.CreatedOn
	}
	return ""
}

func (m *ReadByKeteranganReq) GetUpdateBy() string {
	if m != nil {
		return m.UpdateBy
	}
	return ""
}

func (m *ReadByKeteranganReq) GetUpdateOn() string {
	if m != nil {
		return m.UpdateOn
	}
	return ""
}

func (m *ReadByKeteranganReq) GetKeterangan() string {
	if m != nil {
		return m.Keterangan
	}
	return ""
}

type ReadByKeteranganResp struct {
	AllKeterangan []*ReadItemByIDSupplierResp `protobuf:"bytes,1,rep,name=allKeterangan" json:"allKeterangan,omitempty"`
}

func (m *ReadByKeteranganResp) Reset()                    { *m = ReadByKeteranganResp{} }
func (m *ReadByKeteranganResp) String() string            { return proto.CompactTextString(m) }
func (*ReadByKeteranganResp) ProtoMessage()               {}
func (*ReadByKeteranganResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ReadByKeteranganResp) GetAllKeterangan() []*ReadItemByIDSupplierResp {
	if m != nil {
		return m.AllKeterangan
	}
	return nil
}

type ReadItemResp struct {
	AllItem []*ReadItemByIDSupplierResp `protobuf:"bytes,1,rep,name=allItem" json:"allItem,omitempty"`
}

func (m *ReadItemResp) Reset()                    { *m = ReadItemResp{} }
func (m *ReadItemResp) String() string            { return proto.CompactTextString(m) }
func (*ReadItemResp) ProtoMessage()               {}
func (*ReadItemResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ReadItemResp) GetAllItem() []*ReadItemByIDSupplierResp {
	if m != nil {
		return m.AllItem
	}
	return nil
}

type UpdateItemReq struct {
	IDItem     int32  `protobuf:"varint,1,opt,name=IDItem" json:"IDItem,omitempty"`
	NamaItem   string `protobuf:"bytes,2,opt,name=namaItem" json:"namaItem,omitempty"`
	Merk       string `protobuf:"bytes,3,opt,name=merk" json:"merk,omitempty"`
	IDSupplier int32  `protobuf:"varint,4,opt,name=IDSupplier" json:"IDSupplier,omitempty"`
	Status     int32  `protobuf:"varint,5,opt,name=status" json:"status,omitempty"`
	UpdateBy   string `protobuf:"bytes,6,opt,name=updateBy" json:"updateBy,omitempty"`
	UpdateOn   string `protobuf:"bytes,7,opt,name=updateOn" json:"updateOn,omitempty"`
}

func (m *UpdateItemReq) Reset()                    { *m = UpdateItemReq{} }
func (m *UpdateItemReq) String() string            { return proto.CompactTextString(m) }
func (*UpdateItemReq) ProtoMessage()               {}
func (*UpdateItemReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *UpdateItemReq) GetIDItem() int32 {
	if m != nil {
		return m.IDItem
	}
	return 0
}

func (m *UpdateItemReq) GetNamaItem() string {
	if m != nil {
		return m.NamaItem
	}
	return ""
}

func (m *UpdateItemReq) GetMerk() string {
	if m != nil {
		return m.Merk
	}
	return ""
}

func (m *UpdateItemReq) GetIDSupplier() int32 {
	if m != nil {
		return m.IDSupplier
	}
	return 0
}

func (m *UpdateItemReq) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *UpdateItemReq) GetUpdateBy() string {
	if m != nil {
		return m.UpdateBy
	}
	return ""
}

func (m *UpdateItemReq) GetUpdateOn() string {
	if m != nil {
		return m.UpdateOn
	}
	return ""
}

type ReadItemBystatusReq struct {
	Status int32 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
}

func (m *ReadItemBystatusReq) Reset()                    { *m = ReadItemBystatusReq{} }
func (m *ReadItemBystatusReq) String() string            { return proto.CompactTextString(m) }
func (*ReadItemBystatusReq) ProtoMessage()               {}
func (*ReadItemBystatusReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ReadItemBystatusReq) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type ReadItemBystatusResp struct {
	IDItem     int32  `protobuf:"varint,1,opt,name=IDItem" json:"IDItem,omitempty"`
	NamaItem   string `protobuf:"bytes,2,opt,name=namaItem" json:"namaItem,omitempty"`
	Merk       string `protobuf:"bytes,3,opt,name=merk" json:"merk,omitempty"`
	IDSupplier int32  `protobuf:"varint,4,opt,name=IDSupplier" json:"IDSupplier,omitempty"`
	Status     int32  `protobuf:"varint,5,opt,name=status" json:"status,omitempty"`
	CreatedBy  string `protobuf:"bytes,6,opt,name=createdBy" json:"createdBy,omitempty"`
	CreatedOn  string `protobuf:"bytes,7,opt,name=createdOn" json:"createdOn,omitempty"`
	UpdateBy   string `protobuf:"bytes,8,opt,name=updateBy" json:"updateBy,omitempty"`
	UpdateOn   string `protobuf:"bytes,9,opt,name=updateOn" json:"updateOn,omitempty"`
}

func (m *ReadItemBystatusResp) Reset()                    { *m = ReadItemBystatusResp{} }
func (m *ReadItemBystatusResp) String() string            { return proto.CompactTextString(m) }
func (*ReadItemBystatusResp) ProtoMessage()               {}
func (*ReadItemBystatusResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ReadItemBystatusResp) GetIDItem() int32 {
	if m != nil {
		return m.IDItem
	}
	return 0
}

func (m *ReadItemBystatusResp) GetNamaItem() string {
	if m != nil {
		return m.NamaItem
	}
	return ""
}

func (m *ReadItemBystatusResp) GetMerk() string {
	if m != nil {
		return m.Merk
	}
	return ""
}

func (m *ReadItemBystatusResp) GetIDSupplier() int32 {
	if m != nil {
		return m.IDSupplier
	}
	return 0
}

func (m *ReadItemBystatusResp) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ReadItemBystatusResp) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *ReadItemBystatusResp) GetCreatedOn() string {
	if m != nil {
		return m.CreatedOn
	}
	return ""
}

func (m *ReadItemBystatusResp) GetUpdateBy() string {
	if m != nil {
		return m.UpdateBy
	}
	return ""
}

func (m *ReadItemBystatusResp) GetUpdateOn() string {
	if m != nil {
		return m.UpdateOn
	}
	return ""
}

func init() {
	proto.RegisterType((*AddItemReq)(nil), "grpc.AddItemReq")
	proto.RegisterType((*ReadItemByIDSupplierReq)(nil), "grpc.ReadItemByIDSupplierReq")
	proto.RegisterType((*ReadItemByIDSupplierResp)(nil), "grpc.ReadItemByIDSupplierResp")
	proto.RegisterType((*ReadByKeteranganReq)(nil), "grpc.ReadByKeteranganReq")
	proto.RegisterType((*ReadByKeteranganResp)(nil), "grpc.ReadByKeteranganResp")
	proto.RegisterType((*ReadItemResp)(nil), "grpc.ReadItemResp")
	proto.RegisterType((*UpdateItemReq)(nil), "grpc.UpdateItemReq")
	proto.RegisterType((*ReadItemBystatusReq)(nil), "grpc.ReadItemBystatusReq")
	proto.RegisterType((*ReadItemBystatusResp)(nil), "grpc.ReadItemBystatusResp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc1.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc1.SupportPackageIsVersion4

// Client API for ItemService service

type ItemServiceClient interface {
	AddItem(ctx context.Context, in *AddItemReq, opts ...grpc1.CallOption) (*google_protobuf.Empty, error)
	ReadItemByIDSupplier(ctx context.Context, in *ReadItemByIDSupplierReq, opts ...grpc1.CallOption) (*ReadItemByIDSupplierResp, error)
	ReadItem(ctx context.Context, in *google_protobuf.Empty, opts ...grpc1.CallOption) (*ReadItemResp, error)
	UpdateItem(ctx context.Context, in *UpdateItemReq, opts ...grpc1.CallOption) (*google_protobuf.Empty, error)
	ReadItemBystatus(ctx context.Context, in *ReadItemBystatusReq, opts ...grpc1.CallOption) (*ReadItemBystatusResp, error)
	ReadByKeterangan(ctx context.Context, in *ReadByKeteranganReq, opts ...grpc1.CallOption) (*ReadByKeteranganResp, error)
}

type itemServiceClient struct {
	cc *grpc1.ClientConn
}

func NewItemServiceClient(cc *grpc1.ClientConn) ItemServiceClient {
	return &itemServiceClient{cc}
}

func (c *itemServiceClient) AddItem(ctx context.Context, in *AddItemReq, opts ...grpc1.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc1.Invoke(ctx, "/grpc.ItemService/AddItem", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *itemServiceClient) ReadItemByIDSupplier(ctx context.Context, in *ReadItemByIDSupplierReq, opts ...grpc1.CallOption) (*ReadItemByIDSupplierResp, error) {
	out := new(ReadItemByIDSupplierResp)
	err := grpc1.Invoke(ctx, "/grpc.ItemService/ReadItemByIDSupplier", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *itemServiceClient) ReadItem(ctx context.Context, in *google_protobuf.Empty, opts ...grpc1.CallOption) (*ReadItemResp, error) {
	out := new(ReadItemResp)
	err := grpc1.Invoke(ctx, "/grpc.ItemService/ReadItem", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *itemServiceClient) UpdateItem(ctx context.Context, in *UpdateItemReq, opts ...grpc1.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc1.Invoke(ctx, "/grpc.ItemService/UpdateItem", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *itemServiceClient) ReadItemBystatus(ctx context.Context, in *ReadItemBystatusReq, opts ...grpc1.CallOption) (*ReadItemBystatusResp, error) {
	out := new(ReadItemBystatusResp)
	err := grpc1.Invoke(ctx, "/grpc.ItemService/ReadItemBystatus", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *itemServiceClient) ReadByKeterangan(ctx context.Context, in *ReadByKeteranganReq, opts ...grpc1.CallOption) (*ReadByKeteranganResp, error) {
	out := new(ReadByKeteranganResp)
	err := grpc1.Invoke(ctx, "/grpc.ItemService/ReadByKeterangan", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ItemService service

type ItemServiceServer interface {
	AddItem(context.Context, *AddItemReq) (*google_protobuf.Empty, error)
	ReadItemByIDSupplier(context.Context, *ReadItemByIDSupplierReq) (*ReadItemByIDSupplierResp, error)
	ReadItem(context.Context, *google_protobuf.Empty) (*ReadItemResp, error)
	UpdateItem(context.Context, *UpdateItemReq) (*google_protobuf.Empty, error)
	ReadItemBystatus(context.Context, *ReadItemBystatusReq) (*ReadItemBystatusResp, error)
	ReadByKeterangan(context.Context, *ReadByKeteranganReq) (*ReadByKeteranganResp, error)
}

func RegisterItemServiceServer(s *grpc1.Server, srv ItemServiceServer) {
	s.RegisterService(&_ItemService_serviceDesc, srv)
}

func _ItemService_AddItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddItemReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemServiceServer).AddItem(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.ItemService/AddItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemServiceServer).AddItem(ctx, req.(*AddItemReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ItemService_ReadItemByIDSupplier_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadItemByIDSupplierReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemServiceServer).ReadItemByIDSupplier(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.ItemService/ReadItemByIDSupplier",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemServiceServer).ReadItemByIDSupplier(ctx, req.(*ReadItemByIDSupplierReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ItemService_ReadItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemServiceServer).ReadItem(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.ItemService/ReadItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemServiceServer).ReadItem(ctx, req.(*google_protobuf.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ItemService_UpdateItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateItemReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemServiceServer).UpdateItem(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.ItemService/UpdateItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemServiceServer).UpdateItem(ctx, req.(*UpdateItemReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ItemService_ReadItemBystatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadItemBystatusReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemServiceServer).ReadItemBystatus(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.ItemService/ReadItemBystatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemServiceServer).ReadItemBystatus(ctx, req.(*ReadItemBystatusReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ItemService_ReadByKeterangan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadByKeteranganReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemServiceServer).ReadByKeterangan(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.ItemService/ReadByKeterangan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemServiceServer).ReadByKeterangan(ctx, req.(*ReadByKeteranganReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _ItemService_serviceDesc = grpc1.ServiceDesc{
	ServiceName: "grpc.ItemService",
	HandlerType: (*ItemServiceServer)(nil),
	Methods: []grpc1.MethodDesc{
		{
			MethodName: "AddItem",
			Handler:    _ItemService_AddItem_Handler,
		},
		{
			MethodName: "ReadItemByIDSupplier",
			Handler:    _ItemService_ReadItemByIDSupplier_Handler,
		},
		{
			MethodName: "ReadItem",
			Handler:    _ItemService_ReadItem_Handler,
		},
		{
			MethodName: "UpdateItem",
			Handler:    _ItemService_UpdateItem_Handler,
		},
		{
			MethodName: "ReadItemBystatus",
			Handler:    _ItemService_ReadItemBystatus_Handler,
		},
		{
			MethodName: "ReadByKeterangan",
			Handler:    _ItemService_ReadByKeterangan_Handler,
		},
	},
	Streams:  []grpc1.StreamDesc{},
	Metadata: "item.proto",
}

func init() { proto.RegisterFile("item.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 532 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe4, 0x55, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0x8e, 0x9d, 0xc4, 0x4e, 0xa6, 0x54, 0xaa, 0xb6, 0xa8, 0x2c, 0x06, 0xaa, 0x68, 0x4f, 0xb9,
	0xe0, 0x4a, 0x45, 0x48, 0x45, 0x9c, 0x88, 0x82, 0x44, 0xd4, 0x43, 0x24, 0x57, 0x88, 0x0b, 0x97,
	0x6d, 0xb2, 0x44, 0x51, 0x6d, 0xc7, 0x75, 0x36, 0x48, 0x7e, 0x05, 0xde, 0x84, 0x4b, 0x5e, 0x83,
	0x2b, 0x8f, 0x84, 0x76, 0xd7, 0x3f, 0xbb, 0x0e, 0x36, 0x5c, 0x10, 0x42, 0xdc, 0x3c, 0x3f, 0x3b,
	0x3b, 0xdf, 0x37, 0x9f, 0x77, 0x00, 0xd6, 0x9c, 0x45, 0x7e, 0x92, 0x6e, 0xf8, 0x06, 0xf5, 0x56,
	0x69, 0xb2, 0xf0, 0x9e, 0xac, 0x36, 0x9b, 0x55, 0xc8, 0x2e, 0xa4, 0xef, 0x76, 0xf7, 0xe9, 0x82,
	0x45, 0x09, 0xcf, 0x54, 0x0a, 0xf9, 0x6e, 0x01, 0xbc, 0x59, 0x2e, 0x67, 0x9c, 0x45, 0x01, 0xbb,
	0x47, 0x1e, 0x0c, 0x62, 0x1a, 0x51, 0x61, 0x62, 0x6b, 0x64, 0x8d, 0x87, 0x41, 0x69, 0x23, 0x04,
	0xbd, 0x88, 0xa5, 0x77, 0xd8, 0x96, 0x7e, 0xf9, 0x8d, 0xce, 0x01, 0x66, 0xd3, 0x9b, 0x5d, 0x92,
	0x84, 0x6b, 0x96, 0xe2, 0xee, 0xc8, 0x1a, 0xf7, 0x03, 0xcd, 0x83, 0xce, 0xc0, 0xd9, 0x72, 0xca,
	0x77, 0x5b, 0xdc, 0x93, 0xb1, 0xdc, 0x42, 0x4f, 0x61, 0xb8, 0x48, 0x19, 0xe5, 0x6c, 0x39, 0xc9,
	0x70, 0x5f, 0x16, 0xac, 0x1c, 0x5a, 0x74, 0x1e, 0x63, 0xc7, 0x88, 0xce, 0x63, 0x71, 0xe7, 0x1d,
	0xe3, 0x2c, 0xa5, 0xf1, 0x8a, 0xc6, 0xd8, 0x95, 0x61, 0xcd, 0x43, 0x5e, 0xc1, 0xa3, 0x80, 0x51,
	0x09, 0x69, 0x92, 0x55, 0xbd, 0x08, 0x78, 0x66, 0xbb, 0x56, 0xbd, 0x5d, 0xb2, 0xb7, 0x01, 0xff,
	0xfc, 0xec, 0x36, 0x11, 0x58, 0x66, 0xd3, 0x92, 0x99, 0x7e, 0x90, 0x5b, 0x06, 0x67, 0x76, 0x03,
	0x67, 0xdd, 0x46, 0xce, 0x7a, 0x2d, 0x9c, 0xf5, 0x9b, 0x39, 0x73, 0x5a, 0x39, 0x73, 0xeb, 0x9c,
	0x79, 0x30, 0xd8, 0x25, 0x4b, 0xca, 0xd9, 0x24, 0xc3, 0x03, 0xd5, 0x63, 0x61, 0x57, 0xb1, 0x79,
	0x8c, 0x87, 0x7a, 0xec, 0x80, 0x6b, 0x38, 0xe0, 0xfa, 0xab, 0x0d, 0xa7, 0x82, 0xb0, 0x49, 0x76,
	0x5d, 0x3a, 0x05, 0xd1, 0x7f, 0x8e, 0xab, 0xe1, 0x3f, 0xcb, 0xd5, 0x47, 0x78, 0x78, 0x48, 0xd5,
	0x36, 0x41, 0x53, 0x38, 0xa6, 0x61, 0x58, 0x39, 0xb1, 0x35, 0xea, 0x8e, 0x8f, 0x2e, 0xcf, 0x7d,
	0xf1, 0xf7, 0xfa, 0x4d, 0x72, 0x0c, 0xcc, 0x43, 0xe4, 0x1d, 0x3c, 0x28, 0x52, 0x65, 0xd5, 0x2b,
	0x70, 0x69, 0x18, 0xe6, 0x23, 0xf8, 0x9d, 0x7a, 0x45, 0x3a, 0xf9, 0x66, 0xc1, 0xf1, 0x7b, 0x09,
	0xaa, 0x78, 0x15, 0xfe, 0xb6, 0xf2, 0xf5, 0x89, 0x38, 0x2d, 0x13, 0x71, 0xcd, 0x89, 0x90, 0xe7,
	0x4a, 0x9c, 0x0a, 0xae, 0xaa, 0x95, 0xc3, 0xc9, 0xaf, 0xb1, 0xf4, 0x6b, 0xc8, 0x17, 0x5b, 0x4d,
	0xc8, 0xcc, 0xff, 0x3f, 0xff, 0xfc, 0xcb, 0x7d, 0x17, 0x8e, 0x04, 0x90, 0x1b, 0x96, 0x7e, 0x5e,
	0x2f, 0x18, 0x7a, 0x09, 0x6e, 0xbe, 0x27, 0xd0, 0x89, 0x52, 0x52, 0xb5, 0x36, 0xbc, 0x33, 0x5f,
	0xed, 0x18, 0xbf, 0xd8, 0x31, 0xfe, 0x5b, 0xb1, 0x63, 0x48, 0x07, 0x7d, 0xd0, 0x29, 0xd5, 0xa0,
	0x3e, 0x6b, 0x53, 0xe3, 0xbd, 0xf7, 0x0b, 0xb1, 0x92, 0x0e, 0xba, 0x82, 0x41, 0x11, 0x45, 0x0d,
	0xd7, 0x7b, 0xc8, 0xac, 0x92, 0x9f, 0x7c, 0x0d, 0x50, 0xc9, 0x1b, 0x9d, 0xaa, 0x1c, 0x43, 0xf0,
	0x2d, 0x78, 0xae, 0xe1, 0xa4, 0x2e, 0x11, 0xf4, 0xb8, 0xde, 0x6c, 0x29, 0x35, 0xcf, 0x6b, 0x0a,
	0xc9, 0x4e, 0xf2, 0x62, 0xfa, 0x8b, 0xa0, 0x17, 0xab, 0x3d, 0xaa, 0x7a, 0xb1, 0xfa, 0x23, 0x42,
	0x3a, 0xb7, 0x8e, 0xec, 0xf5, 0xc5, 0x8f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x01, 0x08, 0xb0, 0x16,
	0x01, 0x08, 0x00, 0x00,
}
